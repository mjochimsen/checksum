use super::Digest;

pub const CRC32_ZERO_EMPTY: Digest = Digest::CRC32(0x00000000);
pub const CRC32_ZERO_400D: Digest = Digest::CRC32(0x26a348bb);
pub const CRC32_ZERO_11171: Digest = Digest::CRC32(0x5dc1d8ba);
pub const CRC32_RANDOM_11171: Digest = Digest::CRC32(0xff70a8ee);

pub const MD5_ZERO_EMPTY: Digest = Digest::MD5([
    0xd4, 0x1d, 0x8c, 0xd9, 0x8f, 0x00, 0xb2, 0x04,
    0xe9, 0x80, 0x09, 0x98, 0xec, 0xf8, 0x42, 0x7e
]);
pub const MD5_ZERO_400D: Digest = Digest::MD5([
    0x96, 0xf6, 0x4e, 0x17, 0x9f, 0x77, 0x7e, 0x6e,
    0xda, 0x0c, 0xaa, 0x2d, 0x87, 0x93, 0x56, 0xc9
]);
pub const MD5_ZERO_11171: Digest = Digest::MD5([
    0x41, 0xa2, 0x2d, 0x1e, 0xe7, 0x89, 0xde, 0xcb,
    0xfb, 0xd4, 0x92, 0x4e, 0xc2, 0x1e, 0x53, 0xc9
]);
pub const MD5_RANDOM_11171: Digest = Digest::MD5([
    0xff, 0x8a, 0xe3, 0xcf, 0x94, 0x4c, 0xdd, 0xde,
    0xa7, 0x19, 0x1c, 0x90, 0x6a, 0xfe, 0x0c, 0x81
]);

pub const SHA256_ZERO_EMPTY: Digest = Digest::SHA256([
    0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14,
    0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24,
    0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c,
    0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55
]);
pub const SHA256_ZERO_400D: Digest = Digest::SHA256([
    0x10, 0xbb, 0x1d, 0xbb, 0x5b, 0xcf, 0xb2, 0x03,
    0xd5, 0x83, 0x0e, 0x8a, 0x5b, 0xf4, 0xff, 0x49,
    0xba, 0x1d, 0x0b, 0xd9, 0x18, 0x69, 0x72, 0x50,
    0xf8, 0x94, 0x71, 0xab, 0x22, 0xf4, 0xa5, 0x99
]);
pub const SHA256_ZERO_11171: Digest = Digest::SHA256([
    0xb3, 0xae, 0x04, 0xa0, 0x71, 0x30, 0x26, 0xc8,
    0xcb, 0xf8, 0x8b, 0x6c, 0xbf, 0xf1, 0x73, 0xf6,
    0x8a, 0x27, 0xcd, 0x37, 0x64, 0x14, 0xc4, 0x66,
    0x45, 0xdd, 0x1a, 0x22, 0x93, 0x48, 0x6c, 0x99
]);
pub const SHA256_RANDOM_11171: Digest = Digest::SHA256([
    0x51, 0x52, 0xc2, 0xfe, 0xad, 0x7d, 0x46, 0xcd,
    0x79, 0x11, 0x5c, 0xd0, 0x93, 0x53, 0x46, 0x47,
    0xd8, 0x06, 0xd7, 0x4d, 0xa1, 0xaf, 0xda, 0x90,
    0xbd, 0xc0, 0x6d, 0x4e, 0x7e, 0x40, 0xc5, 0x2d
]);

pub const SHA512_ZERO_EMPTY: Digest = Digest::SHA512([
    0xcf, 0x83, 0xe1, 0x35, 0x7e, 0xef, 0xb8, 0xbd,
    0xf1, 0x54, 0x28, 0x50, 0xd6, 0x6d, 0x80, 0x07,
    0xd6, 0x20, 0xe4, 0x05, 0x0b, 0x57, 0x15, 0xdc,
    0x83, 0xf4, 0xa9, 0x21, 0xd3, 0x6c, 0xe9, 0xce,
    0x47, 0xd0, 0xd1, 0x3c, 0x5d, 0x85, 0xf2, 0xb0,
    0xff, 0x83, 0x18, 0xd2, 0x87, 0x7e, 0xec, 0x2f,
    0x63, 0xb9, 0x31, 0xbd, 0x47, 0x41, 0x7a, 0x81,
    0xa5, 0x38, 0x32, 0x7a, 0xf9, 0x27, 0xda, 0x3e
]);
pub const SHA512_ZERO_400D: Digest = Digest::SHA512([
    0x2a, 0x2b, 0x7a, 0xe8, 0x6d, 0x9f, 0x63, 0x8f,
    0xe8, 0x44, 0x11, 0xb0, 0xe1, 0x3c, 0x60, 0x0a,
    0x61, 0x8b, 0x5d, 0x42, 0x70, 0x0b, 0x36, 0x45,
    0xaa, 0x0e, 0x91, 0xc3, 0x35, 0xd2, 0xee, 0x93,
    0x9a, 0x6a, 0x0f, 0xce, 0xad, 0xce, 0x03, 0xf7,
    0x38, 0x02, 0x51, 0x21, 0xd5, 0x60, 0xbd, 0xe3,
    0x9e, 0x6c, 0x6d, 0x6c, 0xb7, 0x99, 0x94, 0x9a,
    0xc6, 0x2b, 0x1c, 0x60, 0x5e, 0xa4, 0x9d, 0x20
]);
pub const SHA512_ZERO_11171: Digest = Digest::SHA512([
    0x8c, 0x80, 0x97, 0xc7, 0x53, 0x49, 0xb8, 0x1c,
    0xe7, 0xe1, 0x0c, 0x2b, 0xf3, 0x4c, 0x04, 0x04,
    0xc2, 0xe8, 0x2a, 0xf7, 0x2d, 0xa7, 0xd0, 0x47,
    0x3f, 0xed, 0xac, 0xf6, 0xec, 0xf9, 0xac, 0x73,
    0xab, 0x5e, 0xb6, 0x11, 0x28, 0x52, 0x3a, 0x16,
    0xb7, 0x20, 0xe4, 0x75, 0x62, 0x3e, 0xdc, 0x2f,
    0xae, 0x09, 0xd3, 0x09, 0xd5, 0xc6, 0xe8, 0xb8,
    0x48, 0xc7, 0xc4, 0x64, 0x35, 0xcb, 0x49, 0x36
]);
pub const SHA512_RANDOM_11171: Digest = Digest::SHA512([
    0xad, 0x3b, 0xc5, 0x71, 0x23, 0x07, 0x59, 0x8c,
    0x4a, 0xf9, 0xa9, 0x54, 0x74, 0x74, 0xb8, 0x0d,
    0xd2, 0x24, 0x5a, 0x50, 0xb9, 0x69, 0x22, 0xfd,
    0xf8, 0x34, 0xc5, 0xda, 0x2a, 0x24, 0x12, 0xc7,
    0x3a, 0x60, 0xb7, 0x94, 0x23, 0x48, 0x16, 0x04,
    0x64, 0x38, 0x6d, 0x65, 0xac, 0x50, 0x35, 0xaa,
    0x93, 0x04, 0xb5, 0x95, 0xaa, 0xf6, 0x5e, 0x68,
    0x4c, 0xae, 0xcb, 0x7d, 0xbc, 0xbc, 0xc6, 0x39
]);

pub const RMD160_ZERO_EMPTY: Digest = Digest::RMD160([
    0x9c, 0x11, 0x85, 0xa5, 0xc5, 0xe9, 0xfc, 0x54, 0x61, 0x28,
    0x08, 0x97, 0x7e, 0xe8, 0xf5, 0x48, 0xb2, 0x25, 0x8d, 0x31
]);
pub const RMD160_ZERO_400D: Digest = Digest::RMD160([
    0x81, 0xe4, 0x4b, 0xc5, 0x41, 0x6e, 0x98, 0x7e, 0x7c, 0xdb,
    0xa7, 0xc8, 0xcd, 0x29, 0x35, 0xec, 0xf1, 0x5b, 0xdd, 0xcd
]);
pub const RMD160_ZERO_11171: Digest = Digest::RMD160([
    0xf2, 0x28, 0x8b, 0x60, 0x5a, 0x62, 0xa2, 0x1a, 0x26, 0x4a,
    0xbf, 0xfd, 0xc1, 0xd0, 0x36, 0xec, 0x45, 0xef, 0x1d, 0x6c
]);
pub const RMD160_RANDOM_11171: Digest = Digest::RMD160([
    0xcb, 0x4f, 0x95, 0x6b, 0x43, 0x5d, 0x16, 0xbf, 0x03, 0xba,
    0xd5, 0x60, 0x7e, 0xd2, 0xe0, 0x6a, 0xf9, 0xee, 0xfd, 0x7b
]);
